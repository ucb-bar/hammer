# Configuration options and defaults for OpenROAD's par tools.
# The values specified in this file are the defaults.

par.openroad:
  openroad_bin: str # Location of the binary.
  version: str  # this is just to make hammer happy (although, it is never called AFAICT).
  # the version is actually calculated by the OpenROADTool class

  generate_only: bool # Generate the TCL file but do not run it yet.

  create_archive_mode: str
  # generate the tar.gz archive of the current build/par-rundir directory with a runme.sh script to reproduce the results
  # Valid options are:
  # - after_error - if OpenROAD errors, create an archive of the run
  # - always - create an archive after every par run (regardless of whether OpenROAD errors)
  # - previous_run - create an archive of latest par run 
  #                  (useful if OpenROAD gets stuck on endless optimization iterations but never actually "errors")
  # - none - never create an archive

  floorplan_mode: str  # Floorplanning SDC constraints to use.
  # Valid options are:
  # - blank - Specify no floorplanning constraints (likely won't work)
  # - manual - Specify the contents of a manual SDC floorplanning script to use in floorplan_script_contents.
  # - generate - Generate a floorplan from the hammer-vlsi config/IR.
  # - auto_macro - Use OpenROAD's `macro_placement` command to auto-generate macro placements.
  #   If you specify 'manual', you must also specify the floorplanning_script config below. The floorplanning_script config will be ignored in other modes.

  floorplan_script_contents: Optional[str] 
  # type: Optional[str]

  floorplan_origin_pos: str
  # Only used when floorplan_mode == generate
  # By default, OpenROAD places the macros THEN rotates them, but it is convenient to always 
  #   have the macro (x,y) position correspond with bottom left corner of the placed macro
  # Valid options are:
  # - bottom_left - width & height of macro must be specified to use this option (or else will use 'rotated' option)
  # - rotated
  # type: str

  openrcx_techfile: Optional[str]  # Optional: OpenRCX RC tech file
  # type: Optional[str]
  # Should be set in technology plugin

  klayout_techfile_source: Optional[str]  # Optional: KLayout tech file
  # type: Optional[str]
  # Should be set in technology plugin

  setrc_file: Optional[str]

  def2stream_file: str

  # Step parameter configurations

  macro_placement:
    halo: Tuple[int, int]     # placement halo around macros - [vertical, horizontal] widths
    channel: Optional[Tuple[int, int]]      # channel width between macros, default is 2*halo - [vertical, horizontal] widths
    snap_layer: str
    orient_all: str

  global_placement:
    timing_driven: bool
    routability_driven: bool
    density: float
    placement_padding: int
    routing_adjustment: float
  
  detailed_placement:
    placement_padding: int

  clock_tree:
    placement_padding: int
  
  clock_tree_resize:
    setup_margin: float
    hold_margin: float
    hold_max_buffer_percent: int
    placement_padding: int
  
  global_route: 
    routing_adjustment: float
  
  global_route_resize:
    hold_margin: float
    routing_adjustment: float