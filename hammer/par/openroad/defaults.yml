# Configuration options and defaults for OpenROAD's par tools.
# The values specified in this file are the defaults.

par.openroad:
  openroad_bin: "openroad" # Location of the binary.
  version: "dummy-value" # this is just to make hammer happy (although, it is never called AFAICT).
  # the version is actually calculated by the OpenROADTool class

  generate_only: false # Generate the TCL file but do not run it yet.
  # type: bool

  create_archive_mode: none
  # Generate the tar.gz archive of the current build/par-rundir directory with a runme.sh script to reproduce the results
  # Valid options are:
  # - none - never create an archive
  # - after_error - if OpenROAD errors, create an archive of the run
  # - always - create an archive after every par run (regardless of whether OpenROAD errors)
  # - latest_run - create an archive of latest par run (don't run OpenROAD)
  #                  (useful if OpenROAD gets stuck on endless optimization iterations but never actually "errors")
  # type: str

  floorplan_mode: generate # Floorplanning SDC constraints to use.
  # Valid options are:
  # - blank - Specify no floorplanning constraints (likely won't work)
  # - manual - Specify the contents of a manual SDC floorplanning script to use in floorplan_script_contents.
  # - generate - Generate a floorplan from the hammer-vlsi config/IR.
  # - auto_macro - Use OpenROAD's `macro_placement` command to auto-generate macro placements.
  #   If you specify 'manual', you must also specify the floorplanning_script config below. The floorplanning_script config will be ignored in other modes.

  floorplan_origin_pos: bottom_left
  # Only used when floorplan_mode == generate
  # By default, OpenROAD places the macros THEN rotates them, but it is convenient to always 
  #   have the macro (x,y) position correspond with bottom left corner of the placed macro
  # Valid options are:
  # - bottom_left - width & height of macro must be specified to use this option (or else will use 'rotated' option)
  # - rotated
  # type: str

  floorplan_script_contents: null
  # type: Optional[str]

  openrcx_techfile: null # Optional: OpenRCX RC tech file
  # type: Optional[str]
  # Should be set in technology plugin

  klayout_techfile_source: null # Optional: KLayout tech file
  # type: Optional[str]
  # Should be set in technology plugin

  setrc_file: null

  # TODO: maybe find a better location for this file??
  def2stream_file: "../../vlsi/vendor/def2stream.py"
  def2stream_file_meta: prependlocal

  
  # Step parameter configurations

  macro_placement:
    halo: [10, 10]     # placement halo around macros - [vertical, horizontal] widths
    channel: null      # channel width between macros, default is 2*halo - [vertical, horizontal] widths
    snap_layer: par.blockage_spacing_top_layer
    snap_layer_meta: lazycrossref
    orient_all: R0

  global_placement:
    timing_driven: False
    routability_driven: True
    density: 0.6
    placement_padding: 3
    routing_adjustment: 0.5
  
  detailed_placement:
    placement_padding: 2

  clock_tree:
    placement_padding: 1
  
  clock_tree_resize:
    setup_margin: 0.05
    hold_margin: 0.2
    hold_max_buffer_percent: 60
    placement_padding: 0
  
  global_route: 
    routing_adjustment: 0.3
  
  global_route_resize:
    hold_margin: 0.2
    routing_adjustment: 0.3
  




  # alternative method: <param>.<step_name>

  # hold_margin:
  #   clock_tree: 0.2
  #   global_route_resize: 0.4

  # routing_adjustment:
  #   global_placement: 0.5
  #   global_route: 0.3
  #   global_route_resize: 0.1

  # placement_padding:
  #   global_placement: 3
  #   detailed_placement: 2
  #   clock_tree: 1
  #   final: 0
  #   # For different placement steps in PAR, keys set left and right padding in multiples of the row site width
  #   # type: int
