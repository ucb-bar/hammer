# Configuration options and defaults for OpenROAD's par tools.
# The values specified in this file are the defaults.

par.openroad:
  openroad_bin: "openroad" # Location of the binary.
  version: "dummy-value" # this is just to make hammer happy (although, it is never called AFAICT).
  # the version is actually calculated by the OpenROADTool class

  generate_only: false # Generate the TCL file but do not run it yet.

  create_archive_mode: after_error
  # Generate the tar.gz archive of the current build/par-rundir directory with a runme.sh script to reproduce the results
  # Valid options are:
  # - after_error - if OpenROAD errors, create an archive of the run
  # - always - create an archive after every par run (regardless of whether OpenROAD errors)
  # - latest_run - create an archive of latest par run (don't run OpenROAD)
  #                  (useful if OpenROAD gets stuck on endless optimization iterations but never actually "errors")
  # - none - never create an archive
  # type: Optional[str]

  floorplan_mode: generate # Floorplanning SDC constraints to use.
  # Valid options are:
  # - blank - Specify no floorplanning constraints (likely won't work)
  # - manual - Specify the contents of a manual SDC floorplanning script to use in floorplan_script_contents.
  # - generate - Generate a floorplan from the hammer-vlsi config/IR.
  # - auto - Use OpenROAD's `macro_placement` command to auto-generate a floorplan. Will have poor, but sane results
  #   If you specify 'manual', you must also specify the floorplanning_script config below. The floorplanning_script config will be ignored in other modes.

  floorplan_script_contents: null
  # type: Optional[str]

  openrcx_techfile: null
  # type: Optional[str]
  # Optional: OpenRCX RC tech file
  # Should be set in technology plugin

  klayout_techfile_source: null
  # type: Optional[str]
  # Optional: KLayout tech file
  # Should be set in technology plugin
