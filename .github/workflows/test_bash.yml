name: run-sh-tests
on:  
  push:
    branches:
      - ci_cd_debug
      - ci_cd_pr

jobs:
    bash_test_env:
      runs-on: ubuntu-latest
      env:
        HAMMER_VLSI: "{{$PWD}}/src/hammer-vlsi"
        PYTHONPATH: "{{$PWD}}/src:{{$PWD}}/src/jsonschema:{{$PWD}}/src/python-jsonschema-objects:{{$PWD}}/src/hammer-tech:{{$PWD}}/src/hammer-vlsi:{{$PYTHONPATH}}"
        PATHEXTRA: "{{$PWD}}/src/hammer-shell:{{$PATHEXTRA}}"
      steps:
        - name: Setup_for_Repository
          uses: actions/checkout@v2
        - name: Add Env variables
          run: |
            echo  "HAMMER_HOME = ${GITHUB_WORKSPACE}" >> $GITHUB_ENV
            echo  "HAMMER_VLSI=${GITHUB_WORKSPACE}/src/hammer-vlsi" >> $GITHUB_ENV
        - name: Check Current Envs
          run: |
            echo $HAMMER_HOME


    bash_initial_setup:
      needs: [bash_test_env]
      runs-on: ubuntu-latest
      continue-on-error: ${{ matrix.experimental }}
      strategy:
        matrix:
          python-version: [3.9]  # Lowered num of versions for less overhead during testing.
          experimental: [true]
          #Version 3.4 not on x64, so skipping 3.4 for now.
          os: [ubuntu-latest] #add red hat 7 here
      steps:
        - name: Setup_for_Repository
          uses: actions/checkout@v2
        - name: Update submodules
          run: git submodule update
        - name: Check Current Repository
          run: ls -a
        - if: 3.4 == ${{matrix.python-version}}
          run: |
            python3 -m pip install typing
            python3 -m pip install enum34
        - name: Set Up Python ${{ matrix.python-version }} #Here, I can use strategy but should I? Is only the most relevant python version okay (if we need pre 3.4, further setup needed)
          uses: actions/setup-python@v2
          with:
            python-version: ${{ matrix.python-version }}
        - name: Install pytest
          run: |
            python -m pip install --upgrade pip
            pip install pytest
            pip install pyyaml
            pip install python-jsonschema-objects
        - name: Check Relevant Directory
          run: ls -a
        - name: source_setup
          run: |
            echo "HAMMER_HOME=${GITHUB_WORKSPACE}" >> $GITHUB_ENV
            echo "HAMMER_VLSI=${GITHUB_WORKSPACE}/src/hammer-vlsi" >> $GITHUB_ENV
            echo "hammer_utils=${GITHUB_WORKSPACE}/src/hammer-vlsi/hammer_utils" >> $GITHUB_ENV
            echo "HAMMER_CONFIG=${GITHUB_WORKSPACE}/src/hammer_config" >> $GITHUB_ENV
            echo "PYTHONPATH=${GITHUB_WORKSPACE}/src:${GITHUB_WORKSPACE}/src/jsonschema:${GITHUB_WORKSPACE}/src/python-jsonschema-objects:${GITHUB_WORKSPACE}/src/hammer-tech:${GITHUB_WORKSPACE}/src/hammer-vlsi:${PYTHONPATH}" >> $GITHUB_ENV
            echo "MYPYPATH=${GITHUB_WORKSPACE}/src:${GITHUB_WORKSPACE}/src/jsonschema:${GITHUB_WORKSPACE}/src/python-jsonschema-objects:${GITHUB_WORKSPACE}/src/hammer-tech:${GITHUB_WORKSPACE}/src/hammer-vlsi:${PYTHONPATH}" >> $GITHUB_ENV
            echo "PATH=${GITHUB_WORKSPACE}/src/hammer-shell:${PATH}" >> $GITHUB_ENV
        - name: Check Current Envs
          run: |
            ls 
            echo $HAMMER_CONFIG
            echo $HAMMER_HOME
            echo $HAMMER_VLSI
            echo $PYTHONPATH
        - name: script
          run: |
            cd ./src/test
            ./unittests.sh
            echo "RESULT = $?" >> $GITHUB_ENV
    end_condition:
      needs: [bash_initial_setup]
      runs-on: ubuntu-latest
      steps:
        - name: print res
          run: |
            echo $RESULT



