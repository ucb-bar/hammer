name: run-sh-tests
on:  
  push:
    branches:
      - ci_cd_debug
      - ci_cd_pr

jobs:
    bash_test_env:
      runs-on: ubuntu-latest
      env:
        HAMMER_VLSI: "{{$PWD}}/src/hammer-vlsi"
        PYTHONPATH: "{{$PWD}}/src:{{$PWD}}/src/jsonschema:{{$PWD}}/src/python-jsonschema-objects:{{$PWD}}/src/hammer-tech:{{$PWD}}/src/hammer-vlsi:{{$PYTHONPATH}}"
        PATHEXTRA: "{{$PWD}}/src/hammer-shell:{{$PATHEXTRA}}"
      steps:
        - name: Setup_for_Repository
          uses: actions/checkout@v2
        - name: Add Env variables
          run: |
            echo  "HAMMER_HOME = ${GITHUB_WORKSPACE}" >> $GITHUB_ENV
            echo  "HAMMER_VLSI="${GITHUB_WORKSPACE}/src/hammer-vlsi"" >> $GITHUB_ENV
        - name: Check Current Envs
          run: |
            echo $HAMMER_HOME


    bash_initial_setup:
      needs: [bash_test_env]
      runs-on: ubuntu-latest
      strategy:
        matrix:
          python-version: [3.5, 3.6, 3.7, 3.8, 3.9] 
          #Version 3.4 not on x64, so skipping 3.4 for now.
          os: [ubuntu-latest] #add red hat 7 here
      steps:
        - name: Setup_for_Repository
          uses: actions/checkout@v2
        - name: Check Current Repository
          run: ls -a
        - if: 3.4 == ${{matrix.python-version}}
          run: |
            python3 -m pip install typing
            python3 -m pip install enum34
        - name: Set Up Python ${{ matrix.python-version }} #Here, I can use strategy but should I? Is only the most relevant python version okay (if we need pre 3.4, further setup needed)
          uses: actions/setup-python@v2
          with:
            python-version: ${{ matrix.python-version }}
        - name: Install pytest
          run: |
            python -m pip install --upgrade pip
            pip install pytest
        - name: Check Relevant Directory
          run: ls -a
        - name: source_setup
          run: |
            echo "HAMMER_HOME = ${GITHUB_WORKSPACE}" >> $GITHUB_ENV
            echo "HAMMER_VLSI= ${GITHUB_WORKSPACE}/src/hammer-vlsi" >> $GITHUB_ENV
            echo "hammer_config = ${GITHUB_WORKSPACE}/src/hammer_config" >> $GITHUB_ENV
            echo "PYTHONPATH= ${HAMMER_HOME}/src" >> $GITHUB_ENV
            echo "MYPYPATH= ${PYTHONPATH}" >> $GITHUB_ENV
            echo "PATH= ${HAMMER_HOME}/src/hammer-shell:${PATH}" >> $GITHUB_ENV
        - name: Check Current Envs
          run: |
            echo $hammer_config
            echo $HAMMER_HOME
            echo $HAMMER_VLSI
            echo $PYTHONPATH
        - name: script
          run: |
            cd ./src/test
            ./unittests.sh
            echo $?
#    bash_setup_check:
#     runs-on: ubuntu-latest
#      needs: [checkout, bash_initial_setup]
#      env:
#         HAMMER_HOME: $HOME
#      strategy:
#        matrix:
#          python-version: [3.6, 3.7, 3.8, 3.9]
#      steps:
 #       - name: git_submodule
  #        run: |
  #          git submodule update --init --recursive
  #      - name: source_and_cd
   #       run: |
    #        source sourceme.sh
      #      cd src
    #    - name: tests
     #     run: |
     #       ./unittests.sh
      #      echo $?