name: run-python-tests
on:  
  push:
    branches:
      - ci_cd_debug
      - ci_cd_pr
env:
  HAMMER_HOME: $PWD

jobs:
  test:
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      matrix:
        python-version: [3.9] 
        experimental: [true]
    steps:
        # Checkout the latest code from the repo
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Update submodules
        run: git submodule update
      - name: Set Up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Check Current Repository
        run: ls -a
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      - name: Install pytest
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          pip install pyyaml
          pip install python-jsonschema-objects
          pip install mypy
      - name: source_setup
        run: |
          echo "HAMMER_HOME=${GITHUB_WORKSPACE}" >> $GITHUB_ENV
          echo "HAMMER_VLSI=${GITHUB_WORKSPACE}/src/hammer-vlsi" >> $GITHUB_ENV
          echo "hammer_utils=${GITHUB_WORKSPACE}/src/hammer-vlsi/hammer_utils" >> $GITHUB_ENV
          echo "HAMMER_CONFIG=${GITHUB_WORKSPACE}/src/hammer_config" >> $GITHUB_ENV
          echo "PYTHONPATH=${GITHUB_WORKSPACE}/src:${GITHUB_WORKSPACE}/src/jsonschema:${GITHUB_WORKSPACE}/src/python-jsonschema-objects:${GITHUB_WORKSPACE}/src/hammer-tech:${GITHUB_WORKSPACE}/src/hammer-vlsi:${PYTHONPATH}" >> $GITHUB_ENV
          echo "MYPYPATH=${GITHUB_WORKSPACE}/src:${GITHUB_WORKSPACE}/src/jsonschema:${GITHUB_WORKSPACE}/src/python-jsonschema-objects:${GITHUB_WORKSPACE}/src/hammer-tech:${GITHUB_WORKSPACE}/src/hammer-vlsi:${PYTHONPATH}" >> $GITHUB_ENV
          echo "PATH=${GITHUB_WORKSPACE}/src/hammer-shell:${PATH}" >> $GITHUB_ENV
      - name: check $PWD
        run: |
          ls -a 
          pwd
      - name: Run mypy tests
        if: always()
        run: |
          cd src/test && ./mypy.sh
      - name: Run mypy exclusions
        if: always()
        run: |
          cd src/test && ./mypy_with_exclusions.sh




